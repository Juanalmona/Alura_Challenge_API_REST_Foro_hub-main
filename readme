ForoHub API REST - Challenge Back-End G6 Alura
Este proyecto forma parte de la especialización en Back-End ofrecida por Alura - Oracle Next Education.

El objetivo del challenge es construir un foro backend, donde los participantes puedan interactuar planteando y gestionando preguntas relacionadas con tópicos específicos. Este proyecto incluye la implementación de una API REST utilizando el framework Spring.

Objetivo del proyecto
Desarrollar un sistema backend que permita realizar operaciones CRUD (Crear, Leer, Actualizar y Eliminar) en tópicos. La API estará diseñada siguiendo las mejores prácticas del modelo REST e incluirá validaciones, autenticación, y autorización para garantizar la seguridad y funcionalidad del sistema.

Características principales de la API
La API desarrollada incluye las siguientes funcionalidades:

Gestión de tópicos:
Crear un nuevo tópico.
Consultar la lista de tópicos.
Obtener detalles de un tópico específico.
Actualizar un tópico existente.
Eliminar un tópico.
Seguridad:
Implementación de autenticación basada en JWT (JSON Web Token).
Restricción de acceso según roles y permisos.
Base de datos relacional:
Persistencia de datos usando MySQL.
Gestión de migraciones con Flyway.
Documentación interactiva:
Uso de Swagger para describir y probar la API.
Herramientas necesarias
Antes de empezar con el desarrollo, asegúrate de contar con las siguientes herramientas instaladas:

Trello (Organización de tareas)
Git y GitHub (Control de versiones y repositorios)
IntelliJ IDEA Community Edition (Entorno de desarrollo integrado)
Java JDK 17+ (Entorno de ejecución de Java)
Spring Initializr (Generador de proyectos Spring)
MySQL (Sistema de gestión de bases de datos)
MySQL Workbench (Herramienta de diseño y consulta de bases de datos)
Insomnia o Postman (Pruebas de API REST)
Dependencias necesarias
Estas son las dependencias utilizadas en el proyecto, que deben ser seleccionadas al momento de generar el proyecto en Spring Initializr:

Spring Data JPA: Para interactuar con la base de datos relacional.
Lombok: Para reducir el código repetitivo como getters, setters, y constructores.
Spring Web: Para construir servicios RESTful.
Spring Boot DevTools: Para acelerar el desarrollo con reinicio automático de la aplicación.
Flyway Migration: Para gestionar las migraciones de la base de datos.
MySQL Driver: Para conectarse a una base de datos MySQL.
Validation: Para validar datos recibidos en las solicitudes.
Spring Security: Para la implementación de autenticación y autorización.
Springdoc OpenAPI (Swagger): Para documentar y probar la API de forma interactiva.
Pasos principales del Challenge
1. Configuración inicial del entorno
Configura el entorno con las herramientas y dependencias mencionadas.
Genera el proyecto inicial desde Spring Initializr seleccionando las dependencias necesarias.
Configura el archivo application.properties o application.yml con las credenciales de la base de datos MySQL.
2. Creación de la base de datos
Diseña y crea las tablas necesarias utilizando MySQL Workbench.
Implementa migraciones con Flyway para gestionar los cambios en el esquema de la base de datos.
3. Desarrollo de las operaciones CRUD
Implementa rutas REST para permitir la gestión de tópicos:
POST: Crear un nuevo tópico.
GET: Consultar todos los tópicos o uno en específico.
PUT: Actualizar los datos de un tópico existente.
DELETE: Eliminar un tópico.
4. Pruebas de la API
Utiliza Insomnia o Postman para realizar pruebas en cada una de las rutas de la API.
Realiza validaciones de datos y verifica las respuestas esperadas.
5. Seguridad
Integra Spring Security para restringir el acceso a usuarios autenticados.
Implementa JWT para la autenticación y manejo de sesiones.
6. Documentación
Configura Swagger para documentar automáticamente la API y permitir pruebas desde su interfaz.
